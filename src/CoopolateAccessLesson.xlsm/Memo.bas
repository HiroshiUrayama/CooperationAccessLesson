Attribute VB_Name = "Memo"
'#################################################
'Access連携のレッスン
'accdbファイル内のテーブルデータを扱う場合もDAO/ADOを使う(別々の技術)
'#################################################
Option Explicit

'【他のデータベースに移行を考えていない】mdb(エムディービーファイル)
'==================================================
'Dao=DataAccessObject
'【参照設定：Microsoft Office XX.X Access Database Engine Object Library(accdbファイル)】
'【参照設定：Microsoft DAO 3.6 Object Library(mdbファイル)／Access2003まで標準だったAccessデータベースの形式】
'Accessの初期から利用されている。Accessデータベースの特性に最も合致している。
'他のデータベースを使用せず、将来的にもAccessのみという場合に利用する
'==================================================
'Databaseオブジェクト：開いているデータベース
'TableDefオブジェクト：保存されているテーブル
'QueryDefオブジェクト：保存されているクエリ
'Recordsetオブジェクト：テーブルやクエリで定義されているレコードの集合★

'---------------------------------------------------
'CreateObject関数で宣言する場合
'mdbファイル=CreateObject("DAO.DBEngine.36")
'accdbファイル=CreateObject("DAO.DBEngine.120")
'---------------------------------------------------

'---------------------------------------------------
'object.OpenRecordset(Name,Type,Options, LockEdit)
'---------------------------------------------------
'ObjectにDatabaseオブジェクトを指定する
'新しいRecordsetオブジェクトを作成してRecordsetsコレクションに追加する。
'引数name…Recordsetのレコードの取得元を指定する。
'テーブル名・クエリ名・レコードを返すSQLステートメントを指定できる。
'引数LockEditで、Recordsetのロックを指定する。
'※LockType

'★①dbOpenDynaset(2)／ダイナセットタイプのRecordsetを開く。
'ローカルテーブル、リンクテーブル、選択クエリから作成できる。レコード追加、更新も可能。
'Recordsetのレコードが変更されると、元のテーブルのレコードも更新される。

'★②dbOpenForwordOnly(8)／前方スクロールタイプのRecordsetを開く。レコードを前  方方向のみ移動可能
'∴MoveメソッドとMoveNextメソッドのみ使用可能。レコードセットは更新できない。機能は少ないが高速で処理可能。

'★③dbOpenSnapshot(4)／スナップショットタイプのレコードセットを開く。スナップショット作成時のデータに固定され、
'レコードセットを更新することができない｡

'★④テーブルタイプのRecordsetを開く。テーブルに登録されているレコードの集まりを返す。レコードの追加・削除・更新OK。
'ただし、リンクテーブルや結合による選択クエリで作成することは不可能。
'また、元になっているテーブルに作成された「インデックス」が使用できる。
'∴データソート、検索が高速に処理できる

'---------------------------------------------------
'引数Options
'---------------------------------------------------
'①dbAppendonly(8)／'ユーザが新しいレコードをダイナセットに追加するのを許可するが、既存のレコードを読み取ることは許可しない
'②dbConsistent(32)／ダイナセット内の他のレコードに影響を与えないフィールドにのみ更新を適用する(ダイナセットタイプとスナップショットのみ)
'③dbDenyRead(2)／他のユーザーがRecordsetのレコードを読み取れないようにする(テーブルタイプのみ)
'④dbDenyWrite(1)／他のユーザーがRecordsetのレコードを変更できないようにする
'⑤dbForwardOnly(256)／前方スクロールのみのスナップショットタイプRecordsetを作成する(スナップショットタイプのみ)
'⑥dbInconsistent(16)／他のレコードに影響が及ぶ場合でも、全てのダイナセットフィールドに更新を適用する(ダイナセットタイプとスナップショットタイプのみ)
'⑦dbReaOnly(4)／Recordsetを読み取り専用として開く

'---------------------------------------------------
'引数LockEditに指定するLockTypeEnum列挙型の値
'---------------------------------------------------
'①dbOptimistic／レコードIDに基づく共有的同時ロック。
'カーソルは古いレコードと新しいレコードIDを比較し、そのレコードへのアクセスが最後に行われてから変更が加えられたかどうか判断する

'②dbPessimistic／排他的同時ロック。
'カーソルは､レコードが更新可能であることを保証するために必要な最低限のロックを使用する

'【他のデータベースに移行する可能性がある】accdb(エーシーシーディービーファイル)
'==================================================
'ADO=ActiveXDataObject
'【参照設定：Microsoft ActiveX Data Object X.X Library】
'「OLEDBプロバイダ」という仕組みを介して、Accessデータベースはもちろん、
'SQLServerやOracleなどを扱うことも可能。将来的に他のデータベースに移植する可能性のある場合に使用する。
'※ADOの機能を拡張したADOXも使用される。
'※参照設定：ADO Ext. X.X for DDL and Securityに参照設定
'※CreateObject関数の引数に「ADOX.Catalog(データベースに接続する場合)を指定する。
'※mdbファイルと違うところ
    '①多対多のリレーションシップの導入
    '②フィールドの内容に外部ファイルを添付することができる添付ファイル型
    '③SharePoint、Outlookとの連携強化
    '④長大な文字列を格納可能なメモ型における履歴管理機能
'==================================================

'---------------------------------------------------
'CreateObject関数を使う=ADOのConnectionオブジェクト：CreateObject("ADODB.Connection")
'CreateObject関数を使う=ADOのRecordsetオブジェクト：CreateObject（”ADODB.Recordset")
'---------------------------------------------------

'---------------------------------------------------
'流れ／データベースを開く→処理対象のデータを取得する→データを処理する→データベースを閉じる
'---------------------------------------------------

'ADOの場合は､接続文字列をきちんと押さえる
'①Provider／【参照設定：Microsoft.ACE.OLEDB.XX.X;
    'accdbファイルの場合。XX.Xにはバージョンを表す数字が入る。Access2016は、16.0。
    'mdbファイルの場合は「Microsoft.Jet.OLEDB.4.0;」
    'SQLServerの場合はSQLOLEDBを指定する
'②DataSource
    'ファイルパスを指定する。
    
'オブジェクトモデル(ADOの主なオブジェクト)
    '①Connection／データベースへの接続を表すオブジェクト
    '②Command／データベースに対して実行するコマンドを保持するオブジェクト。
        'クエリやSQLステートメントを実行する時に使用する。
    '③Recordset／テーブルやクエリで定義されているレコードの集合
    


'★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
'基本的に混在させないが、混在させて書く場合もある
'★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
'参照設定の優先順位が上のやつが先に読まれる

'どっちかわかりやすくするためには
'---------------------------------------------------
'Dim rs As DAO.Recordset
'Dim rs As ADODB.Recordset
'DAOなのか、ADODBなのかをRecordsetの前側にきちんと書くこと(ちなみに、省略可能らしい)

'ホントや、反応するわ
'Dim rs As Recordset

'参照設定を行っている場合
'---------------------------------------------------
'きちんとADOなのかDAOなのかを書く

'参照設定を行っていなくて、実行時バインディングの場合
'---------------------------------------------------
'変数名にadoRSなのかdaoRSなのかを明記すると良い



























































